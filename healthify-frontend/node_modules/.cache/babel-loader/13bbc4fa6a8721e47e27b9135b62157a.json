{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libraries\\\\Desktop\\\\CDAC\\\\e-HealthBuddy\\\\e-healthbuddy-frontend\\\\src\\\\components\\\\CovidTrackerComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { LineChart, BarChart, Bar, Label, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CovidTrackerComponent() {\n  _s();\n\n  const [data, setData] = useState({\n    data: {\n      \"name\": \" \",\n      \"code\": \" \",\n      \"population\": 0,\n      \"latest_data\": {\n        \"deaths\": 0,\n        \"confirmed\": 0,\n        \"recovered\": 0\n      },\n      \"timeline\": [{\n        \"date\": \" \",\n        \"deaths\": 0,\n        \"confirmed\": 0,\n        \"recovered\": 0,\n        \"new_confirmed\": 0,\n        \"new_recovered\": 0,\n        \"new_deaths\": 0\n      }]\n    }\n  });\n  const [lineGraphData, setLineGraphData] = useState({});\n  const [barGraphData, setBarGraphData] = useState({});\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    try {\n      const resp = await axios.get('http://localhost:8080/covid-api/in');\n      const timeline_data = resp.data.timeline.reverse().filter(data => data.recovered !== 0);\n      const recent_data = resp.data.timeline.reverse().slice(0, 7).reverse();\n      setData(resp.data);\n      setLineGraphData(timeline_data);\n      setBarGraphData(recent_data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Population: \", data.population.toLocaleString(), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Cases: \", data.latest_data.confirmed.toLocaleString(), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Deaths: \", data.latest_data.deaths.toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Recovered: \", data.latest_data.recovered.toLocaleString(), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 730,\n      height: 350,\n      data: lineGraphData,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 50,\n        bottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"\",\n        horizontal: true,\n        vertical: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        label: {\n          value: \"Number of cases\",\n          offset: 30,\n          angle: -90,\n          position: \"left\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"confirmed\",\n        dot: {\n          fill: '#8884d8'\n        },\n        stroke: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"deaths\",\n        dot: {\n          fill: '#eb0e0e'\n        },\n        stroke: \"#eb0e0e\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"recovered\",\n        dot: {\n          fill: '#82ca9d'\n        },\n        stroke: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      width: 730,\n      height: 350,\n      data: barGraphData,\n      margin: {\n        top: 15,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"\",\n        horizontal: true,\n        vertical: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        children: /*#__PURE__*/_jsxDEV(Label, {\n          value: \"Number of cases\",\n          offset: 30,\n          angle: -90,\n          position: \"left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"new_confirmed\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"new_deaths\",\n        fill: \"#eb0e0e\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CovidTrackerComponent, \"I8xL6QQ5per9tGASYbvRBPF4B4k=\");\n\n_c = CovidTrackerComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CovidTrackerComponent\");","map":{"version":3,"sources":["D:/Libraries/Desktop/CDAC/e-HealthBuddy/e-healthbuddy-frontend/src/components/CovidTrackerComponent.js"],"names":["React","useState","useEffect","axios","LineChart","BarChart","Bar","Label","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","CovidTrackerComponent","data","setData","lineGraphData","setLineGraphData","barGraphData","setBarGraphData","getData","resp","get","timeline_data","timeline","reverse","filter","recovered","recent_data","slice","err","console","log","population","toLocaleString","latest_data","confirmed","deaths","top","right","left","bottom","value","offset","angle","position","fill"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport axios from 'axios';\r\nimport { LineChart, BarChart, Bar, Label, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\r\n\r\nexport default function CovidTrackerComponent() {\r\n\r\n\r\n    const [data, setData] = useState({\r\n      data : {\r\n        \"name\": \" \",\r\n        \"code\": \" \",\r\n        \"population\": 0,\r\n        \"latest_data\": {\r\n            \"deaths\": 0,\r\n            \"confirmed\": 0,\r\n            \"recovered\": 0\r\n        },\r\n        \"timeline\": [\r\n            {\r\n                \"date\": \" \",\r\n                \"deaths\": 0,\r\n                \"confirmed\": 0,\r\n                \"recovered\": 0,\r\n                \"new_confirmed\": 0,\r\n                \"new_recovered\": 0,\r\n                \"new_deaths\": 0\r\n            }\r\n      ]\r\n    }\r\n    \r\n    });\r\n    const [lineGraphData, setLineGraphData] = useState({});\r\n    const [barGraphData, setBarGraphData] = useState({});\r\n\r\n    useEffect(()=>{getData()}, []);\r\n\r\n    const getData = async () => {\r\n      try {\r\n        const resp = await axios.get('http://localhost:8080/covid-api/in');\r\n        const timeline_data = resp.data.timeline.reverse().filter(data=> data.recovered!==0);\r\n        const recent_data = resp.data.timeline.reverse().slice(0,7).reverse();\r\n        setData(resp.data);\r\n        setLineGraphData(timeline_data);\r\n        setBarGraphData(recent_data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Population: {data.population.toLocaleString()} </h3>\r\n      <h3>Cases: {data.latest_data.confirmed.toLocaleString()} </h3> \r\n      <h3>Deaths: {data.latest_data.deaths.toLocaleString()}</h3> \r\n      <h3>Recovered: {data.latest_data.recovered.toLocaleString()} </h3> \r\n\r\n      <LineChart width={730} height={350} data={lineGraphData} margin={{ top: 5, right: 30, left: 50, bottom: 20 }}>\r\n        <CartesianGrid strokeDasharray=\"\" horizontal={true} vertical={false} />\r\n        <XAxis dataKey=\"date\"/>\r\n        <YAxis label={{value:\"Number of cases\", offset:30, angle:-90, position:\"left\"}}/>\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"confirmed\" dot={{ fill: '#8884d8' }} stroke=\"#8884d8\" />\r\n        <Line type=\"monotone\" dataKey=\"deaths\" dot={{ fill: '#eb0e0e' }} stroke='#eb0e0e' />\r\n        <Line type=\"monotone\" dataKey=\"recovered\" dot={{ fill: '#82ca9d' }} stroke=\"#82ca9d\" />\r\n      </LineChart>\r\n\r\n      <BarChart width={730} height={350} data={barGraphData} margin={{ top: 15, right: 30, left: 20, bottom: 5 }}>\r\n        <CartesianGrid strokeDasharray=\"\" horizontal={true} vertical={false} />\r\n        <XAxis dataKey=\"date\" />\r\n        <YAxis >\r\n          <Label value=\"Number of cases\" offset={30} angle={-90} position=\"left\" />\r\n        </YAxis>\r\n        <Tooltip />\r\n        <Legend />\r\n        <Bar dataKey=\"new_confirmed\" fill=\"#8884d8\" />\r\n        <Bar dataKey=\"new_deaths\" fill=\"#eb0e0e\" />\r\n      </BarChart>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}