{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libraries\\\\Desktop\\\\CDAC\\\\e-HealthBuddy\\\\e-healthbuddy-frontend\\\\src\\\\components\\\\Basic.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { MDBDataTableV5 } from 'mdbreact';\nimport { useEffect, useContext } from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { UserContext } from './UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Basic() {\n  _s();\n\n  const {\n    user,\n    setUser\n  } = useContext(UserContext); //const [history, setHistory] = useState(null);\n\n  useEffect(() => {\n    axios.get('http://localhost:8080/consultations/patient/12').then(resp => {\n      const data = resp.data;\n      console.log(data);\n      let rows = [];\n      data.patient_consultations.forEach(c => {\n        c.consultations.forEach(cons => {\n          rows.push({\n            name: c.doctor.name,\n            cid: cons.cid,\n            date: cons.date,\n            diagnosis: cons.diagnosis,\n            medicines: cons.medicines,\n            prognosis: cons.prognosis\n          });\n        });\n      });\n      setDatatable(prevState => ({ ...prevState,\n        rows\n      }));\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const [datatable, setDatatable] = useState({\n    columns: [{\n      label: 'Doctor',\n      field: 'name',\n      width: 150,\n      attributes: {\n        'aria-controls': 'DataTable',\n        'aria-label': 'Name'\n      }\n    }, {\n      label: 'Consultation ID',\n      field: 'cid',\n      width: 50\n    }, {\n      label: 'Date',\n      field: 'date',\n      width: 200\n    }, {\n      label: 'Diagnosis',\n      field: 'diagnosis',\n      sort: 'asc',\n      width: 100\n    }, {\n      label: 'Medicines',\n      field: 'medicines',\n      sort: 'disabled',\n      width: 150\n    }, {\n      label: 'Prognosis',\n      field: 'prognosis',\n      sort: 'disabled',\n      width: 100\n    }],\n    rows: [// {\n      //   name: 'Tiger Nixon',\n      //   position: 'System Architect',\n      //   office: 'Edinburgh',\n      //   age: '61',\n      //   date: '2011/04/25',\n      //   salary: '$320',\n      // }\n    ]\n  });\n  return /*#__PURE__*/_jsxDEV(MDBDataTableV5, {\n    hover: true,\n    entriesOptions: [5, 20, 25],\n    entries: 5,\n    pagesAmount: 4,\n    data: datatable\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Basic, \"TLCRE8ia8KyiAu5ws7TZ9YQNzbY=\");\n\n_c = Basic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Basic\");","map":{"version":3,"sources":["D:/Libraries/Desktop/CDAC/e-HealthBuddy/e-healthbuddy-frontend/src/components/Basic.js"],"names":["React","MDBDataTableV5","useEffect","useContext","useState","axios","UserContext","Basic","user","setUser","get","then","resp","data","console","log","rows","patient_consultations","forEach","c","consultations","cons","push","name","doctor","cid","date","diagnosis","medicines","prognosis","setDatatable","prevState","catch","err","datatable","columns","label","field","width","attributes","sort"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { MDBDataTableV5 } from 'mdbreact';\r\nimport { useEffect, useContext } from 'react';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { UserContext } from './UserContext';\r\n\r\nexport default function Basic() {\r\n\r\n  const {user, setUser} = useContext(UserContext);\r\n  //const [history, setHistory] = useState(null);\r\n\r\n  useEffect(() => {\r\n      axios.get('http://localhost:8080/consultations/patient/12')\r\n          .then(resp => {\r\n              const data = resp.data;\r\n              console.log(data);\r\n              let rows = [];\r\n              data.patient_consultations.forEach(c=>{\r\n                c.consultations.forEach(cons=>{\r\n                  rows.push({\r\n                    name: c.doctor.name,\r\n                    cid: cons.cid,\r\n                    date: cons.date,\r\n                    diagnosis: cons.diagnosis,\r\n                    medicines: cons.medicines,\r\n                    prognosis: cons.prognosis\r\n                  })\r\n                })\r\n              })\r\n              setDatatable(prevState=>({...prevState, rows}));\r\n          }).catch(err => {\r\n              console.log(err);\r\n          })\r\n  }, []);\r\n\r\n  const [datatable, setDatatable] = useState({\r\n    columns: [\r\n      {\r\n        label: 'Doctor',\r\n        field: 'name',\r\n        width: 150,\r\n        attributes: {\r\n          'aria-controls': 'DataTable',\r\n          'aria-label': 'Name',\r\n        },\r\n      },\r\n      {\r\n        label: 'Consultation ID',\r\n        field: 'cid',\r\n        width: 50,\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        width: 200,\r\n      },\r\n      {\r\n        label: 'Diagnosis',\r\n        field: 'diagnosis',\r\n        sort: 'asc',\r\n        width: 100,\r\n      },\r\n      {\r\n        label: 'Medicines',\r\n        field: 'medicines',\r\n        sort: 'disabled',\r\n        width: 150,\r\n      },\r\n      {\r\n        label: 'Prognosis',\r\n        field: 'prognosis',\r\n        sort: 'disabled',\r\n        width: 100,\r\n      },\r\n    ],\r\n    rows: [\r\n      // {\r\n      //   name: 'Tiger Nixon',\r\n      //   position: 'System Architect',\r\n      //   office: 'Edinburgh',\r\n      //   age: '61',\r\n      //   date: '2011/04/25',\r\n      //   salary: '$320',\r\n      // }\r\n    ],\r\n  });\r\n\r\n  return <MDBDataTableV5 hover entriesOptions={[5, 20, 25]} entries={5} pagesAmount={4} data={datatable} />;\r\n}"]},"metadata":{},"sourceType":"module"}