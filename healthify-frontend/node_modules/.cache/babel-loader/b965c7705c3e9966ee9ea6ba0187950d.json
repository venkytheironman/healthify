{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libraries\\\\Desktop\\\\CDAC\\\\e-HealthBuddy\\\\e-healthbuddy-frontend\\\\src\\\\components\\\\DoctorHistory.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { MDBDataTableV5 } from 'mdbreact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DoctorHistory = ({\n  did\n}) => {\n  _s();\n\n  //const [found, setFound] = useState(true);\n  const [datatable, setDatatable] = useState({\n    columns: [{\n      label: 'Patient ID',\n      field: 'pid',\n      width: 100\n    }, {\n      label: 'Patient',\n      field: 'name',\n      width: 100,\n      attributes: {\n        'aria-controls': 'DataTable',\n        'aria-label': 'Name'\n      }\n    }, {\n      label: 'Patient Address',\n      field: 'address',\n      width: 200\n    }, {\n      label: 'Patient Mobile',\n      field: 'mobile',\n      width: 100\n    }, {\n      label: 'Consultation ID',\n      field: 'cid',\n      width: 200\n    }, {\n      label: 'Date',\n      field: 'date',\n      width: 200\n    }, {\n      label: 'Diagnosis',\n      field: 'diagnosis',\n      width: 200\n    }, {\n      label: 'Medicines',\n      field: 'medicines',\n      width: 200\n    }, {\n      label: 'Prognosis',\n      field: 'prognosis',\n      width: 200\n    }],\n    rows: []\n  });\n  useEffect(() => {\n    axios.get(`http://localhost:8080/consultations/doctor/${did}`).then(resp => {\n      const data = resp.data;\n      let rows = [];\n      data.doctor_consultations.forEach(c => {\n        c.consultations.forEach(cons => {\n          rows.push({\n            name: c.patient.name,\n            pid: c.patient.pid,\n            address: c.patient.address,\n            mobile: c.patient.mobile,\n            cid: cons.cid,\n            date: cons.date,\n            diagnosis: cons.diagnosis,\n            medicines: cons.medicines,\n            prognosis: cons.prognosis\n          });\n        });\n      });\n      setDatatable(prevState => ({ ...prevState,\n        rows\n      }));\n    }).catch(() => {\n      setDatatable(prevState => ({ ...prevState,\n        rows: []\n      }));\n    });\n  }, [did]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container d-flex flex-column align-items-center justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(MDBDataTableV5, {\n      hover: true,\n      entriesOptions: [5, 10, 15, 20],\n      entries: 5,\n      pagesAmount: 4,\n      data: datatable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DoctorHistory, \"CCBH6sShzu8Vpf5RC60A9LVQFfs=\");\n\n_c = DoctorHistory;\nexport default DoctorHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoctorHistory\");","map":{"version":3,"sources":["D:/Libraries/Desktop/CDAC/e-HealthBuddy/e-healthbuddy-frontend/src/components/DoctorHistory.js"],"names":["axios","useState","useEffect","MDBDataTableV5","DoctorHistory","did","datatable","setDatatable","columns","label","field","width","attributes","rows","get","then","resp","data","doctor_consultations","forEach","c","consultations","cons","push","name","patient","pid","address","mobile","cid","date","diagnosis","medicines","prognosis","prevState","catch"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { MDBDataTableV5 } from 'mdbreact';\r\n\r\nconst DoctorHistory = ({did}) => {\r\n    //const [found, setFound] = useState(true);\r\n    const [datatable, setDatatable] = useState({\r\n        columns: [\r\n        {\r\n            label: 'Patient ID',\r\n            field: 'pid',\r\n            width: 100,\r\n        },\r\n        {\r\n            label: 'Patient',\r\n            field: 'name',\r\n            width: 100,\r\n            attributes: {\r\n            'aria-controls': 'DataTable',\r\n            'aria-label': 'Name',\r\n            },\r\n        },\r\n        {\r\n            label: 'Patient Address',\r\n            field: 'address',\r\n            width: 200,\r\n        },\r\n        {\r\n            label: 'Patient Mobile',\r\n            field: 'mobile',\r\n            width: 100,\r\n        },\r\n        {\r\n            label: 'Consultation ID',\r\n            field: 'cid',\r\n            width: 200,\r\n        },\r\n        {\r\n            label: 'Date',\r\n            field: 'date',\r\n            width: 200,\r\n        },\r\n        {\r\n            label: 'Diagnosis',\r\n            field: 'diagnosis',\r\n            width: 200,\r\n        },\r\n        {\r\n            label: 'Medicines',\r\n            field: 'medicines',\r\n            width: 200,\r\n        },\r\n        {\r\n            label: 'Prognosis',\r\n            field: 'prognosis',\r\n            width: 200,\r\n        },\r\n        ],\r\n        rows: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8080/consultations/doctor/${did}`)\r\n            .then(resp => {\r\n                const data = resp.data;\r\n                let rows = [];\r\n                data.doctor_consultations.forEach(c=>{\r\n                    c.consultations.forEach(cons=>{\r\n                    rows.push({\r\n                        name: c.patient.name,\r\n                        pid: c.patient.pid,\r\n                        address: c.patient.address,\r\n                        mobile: c.patient.mobile,\r\n                        cid: cons.cid,\r\n                        date: cons.date,\r\n                        diagnosis: cons.diagnosis,\r\n                        medicines: cons.medicines,\r\n                        prognosis: cons.prognosis\r\n                    })\r\n                    })\r\n                })\r\n                setDatatable(prevState=>({...prevState, rows}));\r\n            }).catch(() => {\r\n                setDatatable(prevState=>({...prevState, rows: []}));\r\n            })\r\n    },[did]);\r\n\r\n  return (\r\n    <div className=\"container d-flex flex-column align-items-center justify-content-center\">\r\n      <MDBDataTableV5 hover entriesOptions={[5, 10, 15, 20]} entries={5} pagesAmount={4} data={datatable} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorHistory\r\n"]},"metadata":{},"sourceType":"module"}