{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libraries\\\\Desktop\\\\CDAC\\\\e-HealthBuddy\\\\e-healthbuddy-frontend\\\\src\\\\components\\\\FindDoctor.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FindDoctor = () => {\n  _s();\n\n  const [search, setSearch] = useState(null);\n  const [error, setError] = useState(null); //const [doctors, setDoctors] = useState(null);\n\n  const [datatable, setDatatable] = useState({\n    columns: [{\n      label: 'Doctor ID',\n      field: 'did',\n      width: 100\n    }, {\n      label: 'Name',\n      field: 'name',\n      width: 100\n    }, {\n      label: 'Address',\n      field: 'address',\n      width: 200\n    }, {\n      label: 'Mobile',\n      field: 'mobile',\n      width: 100\n    }, {\n      label: 'Email',\n      field: 'email',\n      width: 100\n    }],\n    rows: []\n  });\n\n  const inputHandler = e => {\n    let type = e.target.id;\n    let data = e.target.value;\n    if (type === 'city') setSearch(prevSearch => ({ ...prevSearch,\n      city: data\n    }));else if (type === 'speciality') setSearch(prevSearch => ({ ...prevSearch,\n      speciality: data\n    }));\n  };\n\n  const searchHandler = () => {\n    if (search && search.city && search.speciality) {\n      axios.get(`http://localhost:8080/doctor/city/${search.city}?speciality=${search.speciality}`).then(resp => {\n        //const data = resp.data;\n        const data = resp.data.map(doctor => {\n          return {\n            did: doctor.did,\n            name: doctor.name,\n            address: doctor.address,\n            mobile: doctor.mobile,\n            email: doctor.email\n          };\n        }); //setDoctors(data);\n\n        setDatatable(prevState => ({ ...prevState,\n          rows: data\n        }));\n        setError(null);\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      setError('Please enter both fields!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"city\",\n          type: \"text\",\n          placeholder: \"City\",\n          onChange: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"speciality\",\n          type: \"text\",\n          placeholder: \"Speciality\",\n          onChange: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-center ms-2\",\n          style: {\n            color: 'red'\n          },\n          dangerouslySetInnerHTML: {\n            __html: error\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: searchHandler,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MDBDataTableV5, {\n      hover: true,\n      entriesOptions: [5, 10, 15, 20],\n      entries: 5,\n      pagesAmount: 4,\n      data: datatable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FindDoctor, \"7/A76+KlTYrngW/gRXy5zoKGQdM=\");\n\n_c = FindDoctor;\nexport default FindDoctor;\n\nvar _c;\n\n$RefreshReg$(_c, \"FindDoctor\");","map":{"version":3,"sources":["D:/Libraries/Desktop/CDAC/e-HealthBuddy/e-healthbuddy-frontend/src/components/FindDoctor.js"],"names":["axios","MDBDataTableV5","useState","FindDoctor","search","setSearch","error","setError","datatable","setDatatable","columns","label","field","width","rows","inputHandler","e","type","target","id","data","value","prevSearch","city","speciality","searchHandler","get","then","resp","map","doctor","did","name","address","mobile","email","prevState","catch","err","console","log","color","__html"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { MDBDataTableV5 } from \"mdbreact\";\r\nimport {useState} from 'react';\r\n\r\nconst FindDoctor = () => {\r\n    const [search, setSearch] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    //const [doctors, setDoctors] = useState(null);\r\n\r\n    const [datatable, setDatatable] = useState({\r\n        columns: [\r\n          {\r\n            label: 'Doctor ID',\r\n            field: 'did',\r\n            width: 100,\r\n          },\r\n          {\r\n            label: 'Name',\r\n            field: 'name',\r\n            width: 100,\r\n          },\r\n          {\r\n            label: 'Address',\r\n            field: 'address',\r\n            width: 200,\r\n          },\r\n          {\r\n            label: 'Mobile',\r\n            field: 'mobile',\r\n            width: 100,\r\n          },\r\n          {\r\n            label: 'Email',\r\n            field: 'email',\r\n            width: 100,\r\n          }\r\n        ],\r\n        rows: []\r\n      });\r\n\r\n    const inputHandler = (e) => {       \r\n        let type = e.target.id;\r\n        let data = e.target.value;\r\n        if (type === 'city')\r\n            setSearch(prevSearch => ({...prevSearch, city: data}))\r\n        else if (type === 'speciality')\r\n            setSearch(prevSearch => ({...prevSearch, speciality: data}))\r\n    }\r\n\r\n    const searchHandler = () => {\r\n        if (search && search.city && search.speciality) {\r\n            axios.get(`http://localhost:8080/doctor/city/${search.city}?speciality=${search.speciality}`)\r\n                .then(resp => {\r\n                    //const data = resp.data;\r\n                    const data = resp.data.map(doctor => {\r\n                        return {\r\n                            did: doctor.did,\r\n                            name: doctor.name,\r\n                            address: doctor.address,\r\n                            mobile: doctor.mobile,\r\n                            email: doctor.email\r\n                        }\r\n                    })  \r\n                    //setDoctors(data);\r\n                    setDatatable(prevState=>({...prevState, rows: data}));\r\n                    setError(null);   \r\n                }).catch(err=> {\r\n                    console.log(err);\r\n                })\r\n        } else {\r\n            setError('Please enter both fields!')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className = 'container'>\r\n            <div className = 'row'> \r\n                <div className = \"col-md-8\">\r\n                    <input id='city' type = \"text\" placeholder = \"City\" onChange = {inputHandler}/> \r\n                    <input id='speciality' type = \"text\" placeholder = \"Speciality\" onChange = {inputHandler}/>\r\n                    <span className=\"text-center ms-2\" style={{color: 'red'}} dangerouslySetInnerHTML={{__html: error}} /> \r\n                </div>\r\n                <div className = \"col-md-4\">\r\n                    <button onClick={searchHandler}>Search</button>\r\n                </div> \r\n            </div>\r\n            {/* { doctors ? \r\n                <div className = \"row\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Doctor ID</th>\r\n                                <th>Name</th>\r\n                                <th>Address</th>\r\n                                <th>Mobile</th>\r\n                                <th>Email</th>\r\n                            </tr> \r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                            doctors.map(doctor =>{\r\n                                return <tr key = {doctor.did} > \r\n                                    <td>{doctor.did}</td>\r\n                                    <td>{doctor.name}</td>\r\n                                    <td>{doctor.address}</td>\r\n                                    <td>{doctor.mobile}</td>\r\n                                    <td>{doctor.email}</td>\r\n                                </tr> \r\n                            })  \r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                :\r\n                <div />\r\n            } */}\r\n\r\n            <MDBDataTableV5 hover entriesOptions={[5, 10, 15, 20]} entries={5} pagesAmount={4} data={datatable} />\r\n            \r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FindDoctor\r\n"]},"metadata":{},"sourceType":"module"}