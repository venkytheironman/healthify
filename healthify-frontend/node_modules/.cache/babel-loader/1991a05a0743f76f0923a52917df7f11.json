{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libraries\\\\Desktop\\\\CDAC\\\\healthify\\\\healthify-frontend\\\\src\\\\components\\\\FindDoctor.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FindDoctor = () => {\n  _s();\n\n  const [search, setSearch] = useState(null);\n  const [error, setError] = useState(null);\n  const [datatable, setDatatable] = useState({\n    columns: [{\n      label: 'Doctor ID',\n      field: 'did',\n      width: 100\n    }, {\n      label: 'Name',\n      field: 'name',\n      width: 100\n    }, {\n      label: 'Address',\n      field: 'address',\n      width: 200\n    }, {\n      label: 'Mobile',\n      field: 'mobile',\n      width: 100\n    }, {\n      label: 'Email',\n      field: 'email',\n      width: 100\n    }],\n    rows: []\n  });\n\n  const inputHandler = e => {\n    let type = e.target.id;\n    let data = e.target.value;\n    if (type === 'city') setSearch(prevSearch => ({ ...prevSearch,\n      city: data\n    }));else if (type === 'speciality') setSearch(prevSearch => ({ ...prevSearch,\n      speciality: data\n    }));\n  };\n\n  const searchHandler = () => {\n    if (search && search.city && search.speciality) {\n      axios.get(`http://localhost:8080/doctor/city/${search.city}?speciality=${search.speciality}`).then(resp => {\n        const data = resp.data.map(doctor => {\n          return {\n            did: doctor.did,\n            name: doctor.name,\n            address: doctor.address,\n            mobile: doctor.mobile,\n            email: doctor.email\n          };\n        });\n        setDatatable(prevState => ({ ...prevState,\n          rows: data\n        }));\n        setError(null);\n      }).catch(() => {\n        setError('Error in fetching data.');\n      });\n    } else {\n      setError('Please enter both fields!');\n    }\n  };\n\n  const enterPressed = event => {\n    if (event.key === 'Enter') {\n      searchHandler();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container d-flex flex-column align-items-center justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-1\",\n        style: {\n          minHeight: \"30px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-center ms-2 lead\",\n          style: {\n            color: 'red'\n          },\n          dangerouslySetInnerHTML: {\n            __html: error\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"city\",\n            className: \"me-2\",\n            type: \"text\",\n            placeholder: \"City\",\n            onChange: inputHandler,\n            onKeyPress: enterPressed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"speciality\",\n            className: \"me-2\",\n            type: \"text\",\n            placeholder: \"Speciality\",\n            onChange: inputHandler,\n            onKeyPress: enterPressed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: searchHandler,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(MDBDataTableV5, {\n        scrollY: true,\n        hover: true,\n        entriesOptions: [5, 10, 15, 20],\n        entries: 5,\n        pagesAmount: 4,\n        data: datatable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FindDoctor, \"7/A76+KlTYrngW/gRXy5zoKGQdM=\");\n\n_c = FindDoctor;\nexport default FindDoctor;\n\nvar _c;\n\n$RefreshReg$(_c, \"FindDoctor\");","map":{"version":3,"sources":["D:/Libraries/Desktop/CDAC/healthify/healthify-frontend/src/components/FindDoctor.js"],"names":["axios","MDBDataTableV5","useState","FindDoctor","search","setSearch","error","setError","datatable","setDatatable","columns","label","field","width","rows","inputHandler","e","type","target","id","data","value","prevSearch","city","speciality","searchHandler","get","then","resp","map","doctor","did","name","address","mobile","email","prevState","catch","enterPressed","event","key","minHeight","color","__html"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { MDBDataTableV5 } from \"mdbreact\";\r\nimport {useState} from 'react';\r\n\r\nconst FindDoctor = () => {\r\n    const [search, setSearch] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [datatable, setDatatable] = useState({\r\n        columns: [\r\n          {\r\n            label: 'Doctor ID',\r\n            field: 'did',\r\n            width: 100,\r\n          },\r\n          {\r\n            label: 'Name',\r\n            field: 'name',\r\n            width: 100,\r\n          },\r\n          {\r\n            label: 'Address',\r\n            field: 'address',\r\n            width: 200,\r\n          },\r\n          {\r\n            label: 'Mobile',\r\n            field: 'mobile',\r\n            width: 100,\r\n          },\r\n          {\r\n            label: 'Email',\r\n            field: 'email',\r\n            width: 100,\r\n          }\r\n        ],\r\n        rows: []\r\n      });\r\n\r\n    const inputHandler = (e) => {       \r\n        let type = e.target.id;\r\n        let data = e.target.value;\r\n        if (type === 'city')\r\n            setSearch(prevSearch => ({...prevSearch, city: data}))\r\n        else if (type === 'speciality')\r\n            setSearch(prevSearch => ({...prevSearch, speciality: data}))\r\n    }\r\n\r\n    const searchHandler = () => {\r\n        if (search && search.city && search.speciality) {\r\n            axios.get(`http://localhost:8080/doctor/city/${search.city}?speciality=${search.speciality}`)\r\n                .then(resp => {\r\n                    const data = resp.data.map(doctor => {\r\n                        return {\r\n                            did: doctor.did,\r\n                            name: doctor.name,\r\n                            address: doctor.address,\r\n                            mobile: doctor.mobile,\r\n                            email: doctor.email\r\n                        }\r\n                    })  \r\n                    setDatatable(prevState=>({...prevState, rows: data}));\r\n                    setError(null);   \r\n                }).catch(() => {\r\n                    setError('Error in fetching data.');\r\n                })\r\n        } else {\r\n            setError('Please enter both fields!')\r\n        }\r\n    }\r\n\r\n    const enterPressed = (event) => {\r\n        if (event.key === 'Enter') {\r\n            searchHandler();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className = 'container d-flex flex-column align-items-center justify-content-center'>\r\n                <div className=\"row mt-1\" style={{minHeight: \"30px\"}}>\r\n                <span className=\"text-center ms-2 lead\" style={{color: 'red'}} dangerouslySetInnerHTML={{__html: error}} />\r\n                </div>\r\n                <div className = 'row'> \r\n                    <div className =\"btn-group\">\r\n                        <input id='city' className = \"me-2\" type = \"text\" placeholder = \"City\" onChange = {inputHandler} onKeyPress={enterPressed}/> \r\n                        <input id='speciality' className = \"me-2\" type = \"text\" placeholder = \"Speciality\" onChange = {inputHandler} onKeyPress={enterPressed}/>\r\n                        <button className = \"btn btn-success\" onClick={searchHandler}>Search</button>\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n            <div className=\"mt-3\">\r\n                <MDBDataTableV5 scrollY hover entriesOptions={[5, 10, 15, 20]} entries={5} pagesAmount={4} data={datatable} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FindDoctor\r\n"]},"metadata":{},"sourceType":"module"}