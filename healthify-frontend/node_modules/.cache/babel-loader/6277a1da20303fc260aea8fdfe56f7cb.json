{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libraries\\\\Desktop\\\\CDAC\\\\healthify\\\\healthify-frontend\\\\src\\\\components\\\\PatientHistory.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { MDBDataTableV5, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PatientHistory({\n  pid,\n  consult\n}) {\n  _s();\n\n  const [found, setFound] = useState(true);\n  const [patient, setPatient] = useState();\n  const [datatable, setDatatable] = useState({\n    columns: [{\n      label: 'Doctor',\n      field: 'name',\n      width: 110\n    }, {\n      label: 'Doctor Address',\n      field: 'address',\n      width: 270\n    }, {\n      label: 'Doctor Mobile',\n      field: 'mobile',\n      width: 150\n    }, {\n      label: 'Consultation ID',\n      field: 'cid',\n      width: 151\n    }, {\n      label: 'Date',\n      field: 'date',\n      width: 100\n    }, {\n      label: 'Diagnosis',\n      field: 'diagnosis',\n      width: 200\n    }, {\n      label: 'Medicines',\n      field: 'medicines',\n      width: 200\n    }, {\n      label: 'Prognosis',\n      field: 'prognosis',\n      width: 200\n    }],\n    rows: []\n  });\n  useEffect(() => {\n    axios.get(`http://localhost:8080/consultations/patient/${pid}`).then(resp => {\n      const data = resp.data;\n      setPatient(data.patient);\n      let rows = [];\n      data.patient_consultations.forEach(c => {\n        c.consultations.forEach(cons => {\n          rows.push({\n            name: c.doctor.name,\n            address: c.doctor.address,\n            mobile: c.doctor.mobile,\n            cid: cons.cid,\n            date: cons.date,\n            diagnosis: cons.diagnosis,\n            medicines: cons.medicines,\n            prognosis: cons.prognosis\n          });\n        });\n      });\n      setDatatable(prevState => ({ ...prevState,\n        rows\n      }));\n      setFound(true);\n    }).catch(() => {\n      setDatatable(prevState => ({ ...prevState,\n        rows: []\n      }));\n      setFound(false);\n    });\n  }, [pid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container d-flex flex-column align-items-center justify-content-center\",\n    children: [found && consult && patient &&\n    /*#__PURE__*/\n    // <div className=\"container\">\n    //   <div className=\"row\">\n    //     <div className=\"col-2\">\n    //       <p>Patient ID: {patient.pid}</p>\n    //     </div>\n    //     <div className=\"col-2\">\n    //       <p>Name: {patient.name}</p>\n    //     </div>\n    //     <div className=\"col-2\">\n    //       <p>Mobile: {patient.mobile}</p>\n    //     </div>\n    //     <div className=\"col-2\">\n    //       <p>Email: {patient.email}</p>\n    //     </div>\n    //     <div className=\"col-2\">\n    //       <p>Address: {patient.address}</p>\n    //     </div>\n    //     <div className=\"col-2\">\n    //       <p>City: {patient.city}</p>\n    //     </div>\n    //   </div>\n    //   </div>\n    _jsxDEV(MDBTable, {\n      borderless: true,\n      children: [/*#__PURE__*/_jsxDEV(MDBTableHead, {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Handle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MDBTableBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Mark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Otto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"@mdo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Jacob\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Thornton\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"@fat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Larry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"the Bird\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"@twitter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-4\",\n      children: /*#__PURE__*/_jsxDEV(MDBDataTableV5, {\n        small: true,\n        scrollX: true,\n        hover: true,\n        entriesOptions: [5, 10, 15, 20],\n        entries: 5,\n        pagesAmount: 4,\n        data: datatable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: found && consult ? /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: '/consult',\n          state: {\n            patient: JSON.stringify(patient)\n          }\n        },\n        className: \"btn btn-primary\",\n        children: \"Consult\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PatientHistory, \"20+yklIM2rqSRyl6yqLw1LTjH4E=\");\n\n_c = PatientHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientHistory\");","map":{"version":3,"sources":["D:/Libraries/Desktop/CDAC/healthify/healthify-frontend/src/components/PatientHistory.js"],"names":["React","MDBDataTableV5","MDBTable","MDBTableBody","MDBTableHead","useEffect","useState","axios","Link","PatientHistory","pid","consult","found","setFound","patient","setPatient","datatable","setDatatable","columns","label","field","width","rows","get","then","resp","data","patient_consultations","forEach","c","consultations","cons","push","name","doctor","address","mobile","cid","date","diagnosis","medicines","prognosis","prevState","catch","pathname","state","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { MDBDataTableV5, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function PatientHistory({pid, consult}) {\r\n  const [found, setFound] = useState(true);\r\n  const [patient, setPatient] = useState();  \r\n  const [datatable, setDatatable] = useState({\r\n    columns: [\r\n      {\r\n        label: 'Doctor',\r\n        field: 'name',\r\n        width: 110,\r\n      },\r\n      {\r\n        label: 'Doctor Address',\r\n        field: 'address',\r\n        width: 270,\r\n      },\r\n      {\r\n        label: 'Doctor Mobile',\r\n        field: 'mobile',\r\n        width: 150,\r\n      },\r\n      {\r\n        label: 'Consultation ID',\r\n        field: 'cid',\r\n        width: 151,\r\n      },\r\n      {\r\n        label: 'Date',\r\n        field: 'date',\r\n        width: 100,\r\n      },\r\n      {\r\n        label: 'Diagnosis',\r\n        field: 'diagnosis',\r\n        width: 200,\r\n      },\r\n      {\r\n        label: 'Medicines',\r\n        field: 'medicines',\r\n        width: 200,\r\n      },\r\n      {\r\n        label: 'Prognosis',\r\n        field: 'prognosis',\r\n        width: 200,\r\n      },\r\n    ],\r\n    rows: []\r\n  });\r\n\r\n  useEffect(() => {\r\n      axios.get(`http://localhost:8080/consultations/patient/${pid}`)\r\n          .then(resp => {\r\n              const data = resp.data;\r\n              setPatient(data.patient);\r\n              let rows = [];\r\n              data.patient_consultations.forEach(c=>{\r\n                c.consultations.forEach(cons=>{\r\n                  rows.push({\r\n                    name: c.doctor.name,\r\n                    address: c.doctor.address,\r\n                    mobile: c.doctor.mobile,\r\n                    cid: cons.cid,\r\n                    date: cons.date,\r\n                    diagnosis: cons.diagnosis,\r\n                    medicines: cons.medicines,\r\n                    prognosis: cons.prognosis\r\n                  })\r\n                })\r\n              })\r\n              setDatatable(prevState=>({...prevState, rows}));\r\n              setFound(true);\r\n          }).catch(() => {\r\n              setDatatable(prevState=>({...prevState, rows: []}));\r\n              setFound(false);\r\n        })\r\n  },[pid]);\r\n\r\n  return (\r\n    <div className=\"container d-flex flex-column align-items-center justify-content-center\">  \r\n      { found && consult && patient && \r\n        // <div className=\"container\">\r\n        //   <div className=\"row\">\r\n        //     <div className=\"col-2\">\r\n        //       <p>Patient ID: {patient.pid}</p>\r\n        //     </div>\r\n        //     <div className=\"col-2\">\r\n        //       <p>Name: {patient.name}</p>\r\n        //     </div>\r\n        //     <div className=\"col-2\">\r\n        //       <p>Mobile: {patient.mobile}</p>\r\n        //     </div>\r\n        //     <div className=\"col-2\">\r\n        //       <p>Email: {patient.email}</p>\r\n        //     </div>\r\n        //     <div className=\"col-2\">\r\n        //       <p>Address: {patient.address}</p>\r\n        //     </div>\r\n        //     <div className=\"col-2\">\r\n        //       <p>City: {patient.city}</p>\r\n        //     </div>\r\n        //   </div>\r\n        //   </div>\r\n\r\n        <MDBTable borderless>\r\n          <MDBTableHead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>First</th>\r\n              <th>Last</th>\r\n              <th>Handle</th>\r\n            </tr>\r\n          </MDBTableHead>\r\n          <MDBTableBody>\r\n            <tr>\r\n              <td>1</td>\r\n              <td>Mark</td>\r\n              <td>Otto</td>\r\n              <td>@mdo</td>\r\n            </tr>\r\n            <tr>\r\n              <td>2</td>\r\n              <td>Jacob</td>\r\n              <td>Thornton</td>\r\n              <td>@fat</td>\r\n            </tr>\r\n            <tr>\r\n              <td>3</td>\r\n              <td>Larry</td>\r\n              <td>the Bird</td>\r\n              <td>@twitter</td>\r\n            </tr>\r\n          </MDBTableBody>\r\n        </MDBTable>\r\n      }\r\n      <div className = 'row mt-4'>\r\n        <MDBDataTableV5 small scrollX hover entriesOptions={[5, 10, 15, 20]} entries={5} pagesAmount={4} data={datatable} />\r\n      </div>\r\n      <div>\r\n        {found && consult ? <Link to={{pathname: '/consult', state: {patient: JSON.stringify(patient)}}} className=\"btn btn-primary\">Consult</Link> : ''}\r\n      </div>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}