{"ast":null,"code":"var _jsxFileName = \"D:\\\\Libraries\\\\Desktop\\\\CDAC\\\\e-HealthBuddy\\\\e-HealthBuddy-frontend\\\\e-healthbuddy-frontend\\\\src\\\\components\\\\CovidTrackerComponent.js\";\n// import React, {useState, useEffect} from 'react';\n// import {Line} from 'react-chartjs-2';\nimport CovidTrackerService from '../services/CovidTrackerService';\nimport React, { PureComponent } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport axios from 'axios'; // class CovidTrackerComponent extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             country: []\n//         }\n//     }\n//     componentDidMount() {\n//         CovidTrackerService.getData().then(resp=>{\n//             this.setState({country: resp.data});\n//         })\n//     }\n//     render() {\n//         const d = {\n//             //labels: labels,\n//             datasets: [{\n//               label: 'My First Dataset',\n//               data: [65, 59, 80, 81, 56, 55, 40],\n//               fill: false,\n//               borderColor: 'rgb(75, 192, 192)',\n//               tension: 0.1\n//             }]\n//           };\n//         return (\n//             <Line data = {d}/>\n//         )\n//     }\n// }\n// const CovidTrackerComponent = () => {\n//     const [chartData, setChartData] = useState({});\n//     const chart = () => {\n//         let population = 0, total_cases = 0, total_deaths = 0, total_recovered;\n//         let cumulative_dates = [], cumulative_cases = [], cumulative_deaths = [], cumulative_recovered = [];\n//         CovidTrackerService.getData()\n//         .then(res=>{\n//             const latest_data = res.data.latest_data;\n//             population = Number(res.data.population);\n//             total_deaths = Number(latest_data.deaths);\n//             total_cases = Number(latest_data.confirmed);\n//             total_recovered = Number(latest_data.recovered);\n//             for (let i = res.data.timeline.length-1; i>=0; i=i-4){\n//                 let data = res.data.timeline[i];\n//                 cumulative_dates.push(data.date);\n//                 cumulative_cases.push(Number(data.confirmed));\n//                 cumulative_deaths.push(Number(data.deaths));\n//                 cumulative_recovered.push(Number(data.recovered));\n//             }\n//             // for(const data of res.data.timeline.reverse()){\n//             //     cumulative_dates.push(data.date);\n//             //     cumulative_cases.push(Number(data.confirmed));\n//             //     cumulative_deaths.push(Number(data.deaths));\n//             //     cumulative_recovered.push(Number(data.recovered));\n//             // }\n//             // Getting daily recent 7 days data\n//             //daily = timeline.slice(0,7);\n//             setChartData({\n//                 labels: cumulative_deaths,\n//                 datasets: [\n//                     {\n//                         label: \"Confirmed\",\n//                         data: cumulative_cases,\n//                         backgroundColor: [\"rgba(75,192,192,0.6)\"],\n//                         borderWidth: 4\n//                     },\n//                     {\n//                         label: \"Deaths\",\n//                         data: cumulative_deaths,\n//                         backgroundColor: [\"rgba(255,192,192,0.6)\"],\n//                         borderWidth: 4\n//                     },\n//                     {\n//                         label: \"Recovered\",\n//                         data: cumulative_recovered,\n//                         backgroundColor: [\"rgba(75,255,192,0.6)\"],\n//                         borderWidth: 4\n//                     }\n//                 ]\n//             });\n//         }).catch(err=>console.log(err));\n//     };\n//     useEffect(()=>{chart()}, []);\n//     return (\n//         <Line data = {chartData}\n//             options = {{\n//                 responsive: true,\n//                 // maintainAspectRatio: true,\n//                 // aspectRatio: 1,\n//                 title: {text: \"Cumulative Graph\", display: true},\n//                 legend: {display: true, position: 'right'},\n//                 // scales: {\n//                 //     yAxes: [\n//                 //         {\n//                 //             ticks: {\n//                 //                 autoSkip: true,\n//                 //                 maxTicksLimit: 10,\n//                 //                 beginAtZero: true\n//                 //             },\n//                 //             gridLines: {\n//                 //                 display: false\n//                 //             }\n//                 //         }\n//                 //     ],\n//                 //     xAxes: [\n//                 //         {\n//                 //             gridLines: {\n//                 //                 display: true\n//                 //             }\n//                 //         }\n//                 //     ]\n//                 // }\n//             }} />\n//     );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COVID_TRACKER_API_URL = 'http://localhost:8080/covid-api/in';\nconst daily_data = axios.get(COVID_TRACKER_API_URL);\nconsole.log(daily_data);\nexport default class CovidTrackerComponent extends PureComponent {\n  render() {\n    return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 500,\n        height: 300,\n        data: daily_data,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"daily_data.date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"daily_data.confirmed\",\n          stroke: \"#8884d8\",\n          activeDot: {\n            r: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"daily_data.deaths\",\n          stroke: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  }\n\n} //export default CovidTrackerComponent;","map":{"version":3,"sources":["D:/Libraries/Desktop/CDAC/e-HealthBuddy/e-HealthBuddy-frontend/e-healthbuddy-frontend/src/components/CovidTrackerComponent.js"],"names":["CovidTrackerService","React","PureComponent","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","axios","COVID_TRACKER_API_URL","daily_data","get","console","log","CovidTrackerComponent","render","top","right","left","bottom","r"],"mappings":";AAAA;AACA;AACA,OAAOA,mBAAP,MAAgC,iCAAhC;AAEA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,KAAjC,EAAwCC,aAAxC,EAAuDC,OAAvD,EAAgEC,MAAhE,EAAwEC,mBAAxE,QAAmG,UAAnG;AACA,OAAOC,KAAP,MAAkB,OAAlqBAAqB,GAAG,oCAA9B;AACA,MAAMC,UAAU,GAAGF,KAAK,CAACG,GAAN,CAAUF,qBAAV,CAAnB;AACAG,OAAO,CAACC,GAAR,CAAYH,UAAZ;AAEA,eAAe,MAAMI,qBAAN,SAAoCf,aAApC,CAAkD;AAE/DgB,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,mBAAD;AAAqB,MAAA,KAAK,EAAC,MAA3B;AAAkC,MAAA,MAAM,EAAC,MAAzC;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,KAAK,EAAE,GADT;AAEE,QAAA,MAAM,EAAE,GAFV;AAGE,QAAA,IAAI,EAAEL,UAHR;AAIE,QAAA,MAAM,EAAE;AACNM,UAAAA,GAAG,EAAE,CADC;AAENC,UAAAA,KAAK,EAAE,EAFD;AAGNC,UAAAA,IAAI,EAAE,EAHA;AAINC,UAAAA,MAAM,EAAE;AAJF,SAJV;AAAA,gCAWE,QAAC,aAAD;AAAe,UAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAZF,eAaE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAbF,eAcE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAdF,eAeE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAfF,eAgBE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,UAAX;AAAsB,UAAA,OAAO,EAAC,sBAA9B;AAAqD,UAAA,MAAM,EAAC,SAA5D;AAAsE,UAAA,SAAS,EAAE;AAAEC,YAAAA,CAAC,EAAE;AAAL;AAAjF;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAiBE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,UAAX;AAAsB,UAAA,OAAO,EAAC,mBAA9B;AAAkD,UAAA,MAAM,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AA1B8D,C,CA8BjE","sourcesContent":["// import React, {useState, useEffect} from 'react';\r\n// import {Line} from 'react-chartjs-2';\r\nimport CovidTrackerService from '../services/CovidTrackerService';\r\n\r\nimport React, { PureComponent } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport axios from 'axios';\r\n\r\n// class CovidTrackerComponent extends Component {\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             country: []\r\n//         }\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         CovidTrackerService.getData().then(resp=>{\r\n//             this.setState({country: resp.data});\r\n//         })\r\n//     }\r\n\r\n//     render() {\r\n//         const d = {\r\n//             //labels: labels,\r\n//             datasets: [{\r\n//               label: 'My First Dataset',\r\n//               data: [65, 59, 80, 81, 56, 55, 40],\r\n//               fill: false,\r\n//               borderColor: 'rgb(75, 192, 192)',\r\n//               tension: 0.1\r\n//             }]\r\n//           };\r\n//         return (\r\n//             <Line data = {d}/>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// const CovidTrackerComponent = () => {\r\n//     const [chartData, setChartData] = useState({});\r\n    \r\n//     const chart = () => {\r\n//         let population = 0, total_cases = 0, total_deaths = 0, total_recovered;\r\n//         let cumulative_dates = [], cumulative_cases = [], cumulative_deaths = [], cumulative_recovered = [];\r\n\r\n//         CovidTrackerService.getData()\r\n//         .then(res=>{\r\n//             const latest_data = res.data.latest_data;\r\n//             population = Number(res.data.population);\r\n//             total_deaths = Number(latest_data.deaths);\r\n//             total_cases = Number(latest_data.confirmed);\r\n//             total_recovered = Number(latest_data.recovered);\r\n//             for (let i = res.data.timeline.length-1; i>=0; i=i-4){\r\n//                 let data = res.data.timeline[i];\r\n//                 cumulative_dates.push(data.date);\r\n//                 cumulative_cases.push(Number(data.confirmed));\r\n//                 cumulative_deaths.push(Number(data.deaths));\r\n//                 cumulative_recovered.push(Number(data.recovered));\r\n//             }\r\n//             // for(const data of res.data.timeline.reverse()){\r\n//             //     cumulative_dates.push(data.date);\r\n//             //     cumulative_cases.push(Number(data.confirmed));\r\n//             //     cumulative_deaths.push(Number(data.deaths));\r\n//             //     cumulative_recovered.push(Number(data.recovered));\r\n//             // }\r\n//             // Getting daily recent 7 days data\r\n//             //daily = timeline.slice(0,7);\r\n//             setChartData({\r\n//                 labels: cumulative_deaths,\r\n//                 datasets: [\r\n//                     {\r\n//                         label: \"Confirmed\",\r\n//                         data: cumulative_cases,\r\n//                         backgroundColor: [\"rgba(75,192,192,0.6)\"],\r\n//                         borderWidth: 4\r\n//                     },\r\n//                     {\r\n//                         label: \"Deaths\",\r\n//                         data: cumulative_deaths,\r\n//                         backgroundColor: [\"rgba(255,192,192,0.6)\"],\r\n//                         borderWidth: 4\r\n//                     },\r\n//                     {\r\n//                         label: \"Recovered\",\r\n//                         data: cumulative_recovered,\r\n//                         backgroundColor: [\"rgba(75,255,192,0.6)\"],\r\n//                         borderWidth: 4\r\n//                     }\r\n//                 ]\r\n//             });\r\n\r\n//         }).catch(err=>console.log(err));\r\n//     };\r\n//     useEffect(()=>{chart()}, []);\r\n\r\n//     return (\r\n//         <Line data = {chartData}\r\n//             options = {{\r\n//                 responsive: true,\r\n//                 // maintainAspectRatio: true,\r\n//                 // aspectRatio: 1,\r\n//                 title: {text: \"Cumulative Graph\", display: true},\r\n//                 legend: {display: true, position: 'right'},\r\n//                 // scales: {\r\n//                 //     yAxes: [\r\n//                 //         {\r\n//                 //             ticks: {\r\n//                 //                 autoSkip: true,\r\n//                 //                 maxTicksLimit: 10,\r\n//                 //                 beginAtZero: true\r\n//                 //             },\r\n//                 //             gridLines: {\r\n//                 //                 display: false\r\n//                 //             }\r\n//                 //         }\r\n//                 //     ],\r\n//                 //     xAxes: [\r\n//                 //         {\r\n//                 //             gridLines: {\r\n//                 //                 display: true\r\n//                 //             }\r\n//                 //         }\r\n//                 //     ]\r\n//                 // }\r\n//             }} />\r\n//     );\r\n\r\n// }\r\n\r\n\r\nconst COVID_TRACKER_API_URL = 'http://localhost:8080/covid-api/in';\r\nconst daily_data = axios.get(COVID_TRACKER_API_URL);\r\nconsole.log(daily_data);\r\n\r\nexport default class CovidTrackerComponent extends PureComponent {\r\n  \r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <LineChart\r\n          width={500}\r\n          height={300}\r\n          data={daily_data}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"daily_data.date\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"daily_data.confirmed\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n          <Line type=\"monotone\" dataKey=\"daily_data.deaths\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n//export default CovidTrackerComponent;\r\n\r\n"]},"metadata":{},"sourceType":"module"}