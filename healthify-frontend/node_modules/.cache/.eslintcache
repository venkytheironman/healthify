[{"D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\index.js":"1","D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\App.js":"2","D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\UserContext.js":"3","D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\PatientHome.js":"4","D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\DoctorHome.js":"5","D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\About.js":"6","D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\CovidTracker.js":"7","D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\Login.js":"8","D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\Home.js":"9","D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\ConsultationForm.js":"10","D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\RegistrationForm.js":"11","D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\Navbar.js":"12","D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\PatientHistory.js":"13","D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\FindDoctor.js":"14","D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\TendToPatient.js":"15","D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\DoctorHistory.js":"16","D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\services\\ApiService.js":"17","D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\PatientRegistration.js":"18","D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\DoctorRegistration.js":"19"},{"size":228,"mtime":1630739839073,"results":"20","hashOfConfig":"21"},{"size":1574,"mtime":1630739839030,"results":"22","hashOfConfig":"21"},{"size":87,"mtime":1630739839037,"results":"23","hashOfConfig":"21"},{"size":1435,"mtime":1630752954017,"results":"24","hashOfConfig":"21"},{"size":1874,"mtime":1630753348479,"results":"25","hashOfConfig":"21"},{"size":8673,"mtime":1632890205634,"results":"26","hashOfConfig":"21"},{"size":3999,"mtime":1630768612060,"results":"27","hashOfConfig":"21"},{"size":3859,"mtime":1630840148086,"results":"28","hashOfConfig":"21"},{"size":1269,"mtime":1632889903246,"results":"29","hashOfConfig":"21"},{"size":3840,"mtime":1630838739510,"results":"30","hashOfConfig":"21"},{"size":2596,"mtime":1630841234038,"results":"31","hashOfConfig":"21"},{"size":3508,"mtime":1632888271518,"results":"32","hashOfConfig":"21"},{"size":3563,"mtime":1632580892554,"results":"33","hashOfConfig":"21"},{"size":3510,"mtime":1630768480755,"results":"34","hashOfConfig":"21"},{"size":2813,"mtime":1630768566581,"results":"35","hashOfConfig":"21"},{"size":2654,"mtime":1630768469668,"results":"36","hashOfConfig":"21"},{"size":1870,"mtime":1630835502124,"results":"37","hashOfConfig":"21"},{"size":10271,"mtime":1630840608207,"results":"38","hashOfConfig":"21"},{"size":10230,"mtime":1630840830213,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"9fzrna",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},"D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\index.js",[],["81","82"],"D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\App.js",[],"D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\UserContext.js",[],"D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\PatientHome.js",[],"D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\DoctorHome.js",[],"D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\About.js",[],"D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\CovidTracker.js",[],"D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\Login.js",[],"D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\Home.js",[],"D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\ConsultationForm.js",[],"D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\RegistrationForm.js",[],"D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\Navbar.js",[],"D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\PatientHistory.js",[],"D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\FindDoctor.js",[],"D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\TendToPatient.js",[],"D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\DoctorHistory.js",[],"D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\services\\ApiService.js",[],"D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\PatientRegistration.js",["83","84"],"import { useForm } from 'react-hook-form';\r\nimport classNames from 'classnames';\r\nimport { useRef } from 'react';\r\nimport ApiService from '../services/ApiService';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst PatientRegistration = () => {\r\n\r\n    const history = useHistory();\r\n    const { register, handleSubmit, formState: { errors }, watch } = useForm({ mode: \"onChange\" });\r\n    const password = useRef({});\r\n    password.current = watch(\"password\", \"\");\r\n\r\n    const submitHandler = (data) => {\r\n        console.log(JSON.stringify(data));\r\n        ApiService.patientRegistration(data)\r\n            .then(resp=>{\r\n                console.log(resp.data);\r\n                history.push({\r\n                    pathname: '/login',\r\n                    state: { message: resp.data }\r\n                });\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n    }  \r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(submitHandler)} method=\"post\" className=\"needs-validation\" noValidate autoComplete=\"off\">\r\n            <p>Please fill in this form to create an account!</p>\r\n            <hr />\r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col position-relative\">\r\n                        <input type=\"text\" className={classNames(\"form-control\",{\"is-invalid\": errors.pid})} name=\"pid\" placeholder=\"Patient ID\" \r\n                        {...register('pid', { \r\n                            required: \"Please enter a patient ID.\",\r\n                            pattern: {\r\n                                value: /^\\d{1,5}$/, \r\n                                message: \"Should be 1 to 5 digits only.\"\r\n                            }\r\n                        })}/> \r\n                        {errors.pid && <div className=\"invalid-tooltip\">{errors.pid.message}</div>}\r\n                    </div>\r\n                    <div className=\"col position-relative\">\r\n                        <input type=\"text\" className={classNames(\"form-control\",{\"is-invalid\": errors.name})} name=\"name\" placeholder=\"Name\" \r\n                        {...register('name', { \r\n                            required: \"Please enter your full name.\",\r\n                            minLength: {\r\n                                value: 4,\r\n                                message: \"Should be at least 4 characters\"\r\n                            },\r\n                            pattern: {\r\n                                value: /^(?![\\. ])[a-zA-Z\\. ]+(?<! )$/,\r\n                                message: \"Invalid name.\"\r\n                            }\r\n                        })}\r\n                        />\r\n                        {errors.name && <div className=\"invalid-tooltip\">{errors.name.message}</div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"col position-relative\">\r\n                    <input type=\"email\" className={classNames(\"form-control\",{\"is-invalid\": errors.email})}  name=\"email\" placeholder=\"Email\"\r\n                        {...register('email', { \r\n                                required: \"Please enter your email.\",\r\n                                pattern: {\r\n                                    value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                                    message: \"Invalid email.\"\r\n                                }\r\n                            }\r\n                        )}\r\n                    />\r\n                    {errors.email && <div className=\"invalid-tooltip\">{errors.email.message}</div>}\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col position-relative\">\r\n                        <input type=\"password\" className={classNames(\"form-control\",{\"is-invalid\": errors.password})} name=\"password\" placeholder=\"Password\" \r\n                            {...register('password', { \r\n                                    required: \"Please enter your password.\",\r\n                                    minLength: {\r\n                                        value: 8,\r\n                                        message: \"Should be at least 8 characters.\"\r\n                                    }\r\n                                }\r\n                            )}\r\n                        />\r\n                        {errors.password && <div className=\"invalid-tooltip\">{errors.password.message}</div>}\r\n                    </div>\r\n                    <div className=\"col position-relative\">\r\n                        <input type=\"password\" className={classNames(\"form-control\",{\"is-invalid\": errors.confirm_password})} name=\"confirm_password\" placeholder=\"Confirm Password\" \r\n                            {...register('confirm_password', {\r\n                                validate: value =>\r\n                                    value === password.current || \"The passwords do not match.\"\r\n                                }\r\n                            )}\r\n                        />\r\n                        {errors.confirm_password && <div className=\"invalid-tooltip\">{errors.confirm_password.message}</div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"col position-relative\">\r\n                    <input type=\"text\" className={classNames(\"form-control\",{\"is-invalid\": errors.mobile})} name=\"mobile\" placeholder=\"Mobile\" \r\n                        {...register('mobile', { \r\n                                required: \"Please enter your mobile.\",\r\n                                pattern: {\r\n                                    value: /^[789]\\d{9}$/,\r\n                                    message: \"Invalid mobile number.\"\r\n                                }\r\n                            }\r\n                        )}\r\n                    />\r\n                    {errors.mobile && <div className=\"invalid-tooltip\">{errors.mobile.message}</div>}\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"col position-relative\">\r\n                    <input type=\"text\" className={classNames(\"form-control\",{\"is-invalid\": errors.aadhar})} name=\"aadhar\" placeholder=\"Aadhar\" \r\n                        {...register('aadhar', { \r\n                                required: \"Please enter your aadhar.\",\r\n                                pattern: {\r\n                                    value: /^\\d{12}$/,\r\n                                    message: \"Invalid aadhar number.\"\r\n                                }\r\n                            }\r\n                        )}\r\n                    />\r\n                    {errors.aadhar && <div className=\"invalid-tooltip\">{errors.aadhar.message}</div>}\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col position-relative\">\r\n                        <input type=\"text\" className={classNames(\"form-control\",{\"is-invalid\": errors.address})} name=\"address\" placeholder=\"Address\" \r\n                            {...register('address', { \r\n                                    required: \"Please enter your address.\",\r\n                                    minLength: {\r\n                                        value: 10,\r\n                                        message: \"Should be at least 10 characters.\"\r\n                                    }\r\n                                }\r\n                            )}\r\n                        />\r\n                        {errors.address && <div className=\"invalid-tooltip\">{errors.address.message}</div>}\r\n                    </div>\r\n                    <div className=\"col-4 position-relative\">\r\n                        <input type=\"text\" className={classNames(\"form-control\",{\"is-invalid\": errors.city})}  name=\"city\" placeholder=\"City\" \r\n                            {...register('city', { \r\n                                    required: \"Please enter your city.\",\r\n                                    minLength: {\r\n                                        value: 5,\r\n                                        message: \"Should be at least 5 characters.\"\r\n                                    }\r\n                                }\r\n                            )}\r\n                        />\r\n                        {errors.city && <div className=\"invalid-tooltip\">{errors.city.message}</div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group position-relative\">\r\n                <input type=\"text\" className={classNames(\"form-control\",{\"is-invalid\": errors.dob})} name=\"dob\" placeholder=\"Date of birth in yyyy-MM-dd\" \r\n                    {...register('dob', { \r\n                            required: \"Please enter your date of birth.\",\r\n                            pattern: {\r\n                                value: /^\\d{4}-\\d{2}-\\d{2}$/,\r\n                                message: \"Invalid date of birth.\"\r\n                            }\r\n                        }\r\n                    )}\r\n                />\r\n                {errors.dob && <div className=\"invalid-tooltip\">{errors.dob.message}</div>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"form-check-label\">\r\n                    <input type=\"checkbox\" className={classNames(\"form-check-input\", {\"is-invalid\": errors.tnc})} name=\"tnc\"\r\n                        {...register('tnc', { \r\n                                required: \"Please agree to the terms and conditions.\"\r\n                            }\r\n                        )} \r\n                    /> I hereby declare that the above information is true to the best of my knowledge.\r\n                </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <button type=\"submit\" className=\"btn btn-primary btn-lg text-dark\">Sign Up</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PatientRegistration\r\n","D:\\Libraries\\Desktop\\CDAC\\healthify\\healthify-frontend\\src\\components\\DoctorRegistration.js",["85","86"],"import { useForm } from 'react-hook-form';\r\nimport classNames from 'classnames';\r\nimport { useRef } from 'react';\r\nimport ApiService from '../services/ApiService';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst DoctorRegistration = () => {\r\n    const history = useHistory();\r\n    const { register, handleSubmit, formState: { errors }, watch } = useForm({ mode: \"onChange\" });\r\n    const password = useRef({});\r\n    password.current = watch(\"password\", \"\");\r\n\r\n    const submitHandler = (data) => {\r\n        console.log(JSON.stringify(data));\r\n        ApiService.doctorRegistration(data)\r\n            .then(resp=>{\r\n                history.push({\r\n                    pathname: '/login',\r\n                    state: { message: resp.data }\r\n                });\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n    }  \r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(submitHandler)} method=\"post\" className=\"needs-validation\" noValidate autoComplete=\"off\">\r\n            <p>Please fill in this form to create an account!</p>\r\n            <hr />\r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col position-relative\">\r\n                        <input type=\"text\" className={classNames(\"form-control\",{\"is-invalid\": errors.did})} name=\"did\" placeholder=\"Doctor ID\" \r\n                        {...register('did', { \r\n                            required: \"Please enter a doctor ID.\",\r\n                            pattern: {\r\n                                value: /^\\d{1,5}$/, \r\n                                message: \"Should be 1 to 5 digits only.\"\r\n                            }\r\n                        })}/> \r\n                        {errors.did && <div className=\"invalid-tooltip\">{errors.did.message}</div>}\r\n                    </div>\r\n                    <div className=\"col position-relative\">\r\n                        <input type=\"text\" className={classNames(\"form-control\",{\"is-invalid\": errors.name})} name=\"name\" placeholder=\"Name\" \r\n                        {...register('name', { \r\n                            required: \"Please enter your full name.\",\r\n                            minLength: {\r\n                                value: 4,\r\n                                message: \"Should be at least 4 characters\"\r\n                            },\r\n                            pattern: {\r\n                                value: /^(?![\\. ])[a-zA-Z\\. ]+(?<! )$/,\r\n                                message: \"Invalid name.\"\r\n                            }\r\n                        })}\r\n                        />\r\n                        {errors.name && <div className=\"invalid-tooltip\">{errors.name.message}</div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"col position-relative\">\r\n                    <input type=\"email\" className={classNames(\"form-control\",{\"is-invalid\": errors.email})}  name=\"email\" placeholder=\"Email\"\r\n                        {...register('email', { \r\n                                required: \"Please enter your email.\",\r\n                                pattern: {\r\n                                    value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                                    message: \"Invalid email.\"\r\n                                }\r\n                            }\r\n                        )}\r\n                    />\r\n                    {errors.email && <div className=\"invalid-tooltip\">{errors.email.message}</div>}\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col position-relative\">\r\n                        <input type=\"password\" className={classNames(\"form-control\",{\"is-invalid\": errors.password})} name=\"password\" placeholder=\"Password\" \r\n                            {...register('password', { \r\n                                    required: \"Please enter your password.\",\r\n                                    minLength: {\r\n                                        value: 8,\r\n                                        message: \"Should be at least 8 characters.\"\r\n                                    }\r\n                                }\r\n                            )}\r\n                        />\r\n                        {errors.password && <div className=\"invalid-tooltip\">{errors.password.message}</div>}\r\n                    </div>\r\n                    <div className=\"col position-relative\">\r\n                        <input type=\"password\" className={classNames(\"form-control\",{\"is-invalid\": errors.confirm_password})} name=\"confirm_password\" placeholder=\"Confirm Password\" \r\n                            {...register('confirm_password', {\r\n                                validate: value =>\r\n                                    value === password.current || \"The passwords do not match.\"\r\n                                }\r\n                            )}\r\n                        />\r\n                        {errors.confirm_password && <div className=\"invalid-tooltip\">{errors.confirm_password.message}</div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"col position-relative\">\r\n                    <input type=\"text\" className={classNames(\"form-control\",{\"is-invalid\": errors.mobile})} name=\"mobile\" placeholder=\"Mobile\" \r\n                        {...register('mobile', { \r\n                                required: \"Please enter your mobile.\",\r\n                                pattern: {\r\n                                    value: /^[789]\\d{9}$/,\r\n                                    message: \"Invalid mobile number.\"\r\n                                }\r\n                            }\r\n                        )}\r\n                    />\r\n                    {errors.mobile && <div className=\"invalid-tooltip\">{errors.mobile.message}</div>}\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"col position-relative\">\r\n                    <input type=\"text\" className={classNames(\"form-control\",{\"is-invalid\": errors.aadhar})} name=\"aadhar\" placeholder=\"Aadhar\" \r\n                        {...register('aadhar', { \r\n                                required: \"Please enter your aadhar.\",\r\n                                pattern: {\r\n                                    value: /^\\d{12}$/,\r\n                                    message: \"Invalid aadhar number.\"\r\n                                }\r\n                            }\r\n                        )}\r\n                    />\r\n                    {errors.aadhar && <div className=\"invalid-tooltip\">{errors.aadhar.message}</div>}\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col position-relative\">\r\n                        <input type=\"text\" className={classNames(\"form-control\",{\"is-invalid\": errors.address})} name=\"address\" placeholder=\"Address\" \r\n                            {...register('address', { \r\n                                    required: \"Please enter your address.\",\r\n                                    minLength: {\r\n                                        value: 10,\r\n                                        message: \"Should be at least 10 characters.\"\r\n                                    }\r\n                                }\r\n                            )}\r\n                        />\r\n                        {errors.address && <div className=\"invalid-tooltip\">{errors.address.message}</div>}\r\n                    </div>\r\n                    <div className=\"col-4 position-relative\">\r\n                        <input type=\"text\" className={classNames(\"form-control\",{\"is-invalid\": errors.city})}  name=\"city\" placeholder=\"City\" \r\n                            {...register('city', { \r\n                                    required: \"Please enter your city.\",\r\n                                    minLength: {\r\n                                        value: 5,\r\n                                        message: \"Should be at least 5 characters.\"\r\n                                    }\r\n                                }\r\n                            )}\r\n                        />\r\n                        {errors.city && <div className=\"invalid-tooltip\">{errors.city.message}</div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group position-relative\">\r\n                <input type=\"text\" className={classNames(\"form-control\",{\"is-invalid\": errors.speciality})} name=\"speciality\" placeholder=\"Speciality\" \r\n                    {...register('speciality', { \r\n                            required: \"Please enter your speciality.\",\r\n                            minLength: {\r\n                                value: 5,\r\n                                message: \"Should be at least 5 characters.\"\r\n                            }\r\n                        }\r\n                    )}\r\n                />\r\n                {errors.speciality && <div className=\"invalid-tooltip\">{errors.speciality.message}</div>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"form-check-label\">\r\n                    <input type=\"checkbox\" className={classNames(\"form-check-input\", {\"is-invalid\": errors.tnc})} name=\"tnc\"\r\n                        {...register('tnc', { \r\n                                required: \"Please agree to the terms and conditions.\"\r\n                            }\r\n                        )} \r\n                    /> I hereby declare that the above information is true to the best of my knowledge.\r\n                </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <button type=\"submit\" className=\"btn btn-primary btn-lg text-dark\">Sign Up</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default DoctorRegistration\r\n",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":54,"column":46,"nodeType":"93","messageId":"94","endLine":54,"endColumn":47,"suggestions":"95"},{"ruleId":"91","severity":1,"message":"92","line":54,"column":58,"nodeType":"93","messageId":"94","endLine":54,"endColumn":59,"suggestions":"96"},{"ruleId":"91","severity":1,"message":"92","line":52,"column":46,"nodeType":"93","messageId":"94","endLine":52,"endColumn":47,"suggestions":"97"},{"ruleId":"91","severity":1,"message":"92","line":52,"column":58,"nodeType":"93","messageId":"94","endLine":52,"endColumn":59,"suggestions":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["101","102"],["103","104"],["105","106"],["107","108"],"no-global-assign","no-unsafe-negation",{"messageId":"109","fix":"110","desc":"111"},{"messageId":"112","fix":"113","desc":"114"},{"messageId":"109","fix":"115","desc":"111"},{"messageId":"112","fix":"116","desc":"114"},{"messageId":"109","fix":"117","desc":"111"},{"messageId":"112","fix":"118","desc":"114"},{"messageId":"109","fix":"119","desc":"111"},{"messageId":"112","fix":"120","desc":"114"},"removeEscape",{"range":"121","text":"122"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"123","text":"124"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"125","text":"122"},{"range":"126","text":"124"},{"range":"127","text":"122"},{"range":"128","text":"124"},{"range":"129","text":"122"},{"range":"130","text":"124"},[2505,2506],"",[2505,2505],"\\",[2517,2518],[2517,2517],[2458,2459],[2458,2458],[2470,2471],[2470,2470]]